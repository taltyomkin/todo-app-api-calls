{"version":3,"sources":["components/Task.js","components/AddTask.js","components/Header.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Task","task","deleteTask","id","toggleCheck","className","type","onClick","e","checked","target","done","htmlFor","AddTask","handleInput","inputValue","onSubmit","onChange","value","Header","taskNumber","remains","length","Main","useState","setInputValue","tasks","setTasks","fetchData","setFetchData","accessToken","apiUrl","a","authAxios","axios","create","baseURL","headers","Authorization","get","then","response","data","docs","console","log","newTask","post","patchtData","patch","deleteData","delete","useEffect","getData","filter","handleRemainsTasks","map","title","_id","preventDefault","postData","body","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9b4fa9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Task = ({task, deleteTask, id, toggleCheck}) => {\r\n    const handleCheck = (e) => {\r\n        const checked = e.target.checked ? {done: true} : {done: false}\r\n        toggleCheck(id, checked);\r\n    }\r\n    return ( \r\n        <form>\r\n            <div>\r\n                <input className='check-box' type='checkbox' onClick={handleCheck}/>\r\n                <label htmlFor='task'>{task}</label>\r\n            </div>\r\n            <div>\r\n                <button className='deletBtn' onClick={() =>deleteTask(id)} >Delete</button>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n\r\n\r\n \r\nexport default Task;","import React from 'react';\r\n\r\nconst AddTask = ({handleInput, task, inputValue}) => {\r\n    return ( \r\n        <div id='add-task' >\r\n            <form onSubmit={task}>\r\n                <input\r\n                    className='add-Task-input'\r\n                    type='text'\r\n                    onChange={handleInput}\r\n                    value={inputValue}\r\n                />\r\n                <button>Add</button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default AddTask;\r\n","import React from 'react';\r\n\r\nconst Header = ({taskNumber, remains}) => {\r\n    return ( \r\n        <div id='header' >\r\n            <h1>{taskNumber} Tasks</h1>\r\n            <span>task remain {remains.length}</span>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './Main.css';\r\nimport Task from './Task';\r\nimport AddTask from './AddTask';\r\nimport Header from './Header';\r\n\r\nconst Main = () => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [tasks,setTasks] = useState();\r\n    const [fetchData, setFetchData] = useState(false);\r\n\r\n    const accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYxNjJlM2U1MzVkODdiZmYxMzBiOTJlZiIsIm5hbWUiOiJUYWxUIiwiaWF0IjoxNjMzODcwODI5LCJleHAiOjE2MzUwODA0Mjl9.VaTiwyqup-dO5YcnnYlSwCyfCGSvxxcxF70W0HQ0TFo';\r\n    const apiUrl = 'http://todo.etodo.xyz/api/v1';\r\n\r\n    async function getData(){\r\n        const authAxios = axios.create({\r\n            baseURL: apiUrl,\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        })\r\n        try{\r\n            await authAxios.get('/tasks')\r\n            .then(response => {\r\n                setTasks(response.data.docs);                \r\n            })\r\n        } catch(error){\r\n            console.log(error)\r\n        } \r\n    }\r\n    \r\n    async function postData(newTask){\r\n        const authAxios = axios.create({\r\n            baseURL: apiUrl,\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        })\r\n        try{\r\n            await authAxios.post('/tasks',newTask)\r\n            .then(response => {\r\n                console.log(response)\r\n            })\r\n        } catch(error){\r\n            console.log(error)\r\n        } \r\n    }\r\n    \r\n    async function patchtData(id,checked){\r\n        const authAxios = axios.create({\r\n            baseURL: apiUrl,\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        })\r\n        try{\r\n            await authAxios.patch(`/tasks/${id}`, checked)\r\n            .then(response => {\r\n                console.log(response);\r\n                setFetchData(true);\r\n            })\r\n        } catch(error){\r\n            console.log(error)\r\n        } \r\n    }\r\n    \r\n    async function deleteData(id){\r\n        const authAxios = axios.create({\r\n            baseURL: apiUrl,\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        })\r\n        try{\r\n            await authAxios.delete(`/tasks/${id}`)\r\n            .then(() => {\r\n                setFetchData(true);\r\n            })\r\n        } catch(error){\r\n            console.log(error)\r\n        } \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getData();\r\n        setFetchData(false);\r\n    },[fetchData])\r\n\r\n    const handleChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const newTask = {title:inputValue, body:\"\", done:false};\r\n        postData(newTask);\r\n        setFetchData(true);\r\n        setInputValue('');\r\n    }\r\n\r\n    const handleRemainsTasks = () => {\r\n        if(tasks){\r\n            const remains = tasks.filter(task => task.done !== true);\r\n            return remains   \r\n        } \r\n    }\r\n    \r\n    return ( \r\n        <div id='container'>\r\n        {!tasks ? <h1>No tasks yet...</h1>\r\n        : \r\n        <>\r\n            <Header taskNumber={tasks.length} remains={handleRemainsTasks()}/>\r\n            <ul >\r\n                {tasks.map(task => <li className={task.done ? 'task-li-done' : 'task-li'}>\r\n                    <Task\r\n                        key={task._id}\r\n                        toggleCheck={patchtData}\r\n                        task={task.title}\r\n                        id={task._id}\r\n                        deleteTask={deleteData}\r\n                    />\r\n                </li>)}\r\n            </ul>\r\n        </> \r\n        }\r\n        <AddTask handleInput={handleChange} inputValue={inputValue} task={handleSubmit} />\r\n    </div> );\r\n}\r\n \r\nexport default Main;\r\n\r\n","import './App.css';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}